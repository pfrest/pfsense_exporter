name: Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  release_binary_build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            build_name: pfsense_exporter-linux-amd64
          - goos: linux
            goarch: arm64
            build_name: pfsense_exporter-linux-arm64
          - goos: windows
            goarch: amd64
            build_name: pfsense_exporter-windows-amd64.exe
          - goos: windows
            goarch: arm64
            build_name: pfsense_exporter-windows-arm64.exe
          - goos: darwin
            goarch: amd64
            build_name: pfsense_exporter-darwin-amd64
          - goos: darwin
            goarch: arm64
            build_name: pfsense_exporter-darwin-arm64
          - goos: freebsd
            goarch: amd64
            build_name: pfsense_exporter-freebsd-amd64
          - goos: freebsd
            goarch: arm64
            build_name: pfsense_exporter-freebsd-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build exporter
        env:
            GOOS: ${{ matrix.goos }}
            GOARCH: ${{ matrix.goarch }}
        run: |
          go build -ldflags "-X 'main.version=${{ github.ref_name }}'" -o ${{ matrix.build_name }} ./cmd/pfsense_exporter

      - name: Upload build as release asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.build_name }}

  release_image_build:
    runs-on: ubuntu-latest

    # Ensure we have permissions to write to the package repo
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ github.ref_name }}
            type=raw,value=latest

      - name: Push image build
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DOCKER_IMAGE_VERSION=${{ github.ref_name }}
