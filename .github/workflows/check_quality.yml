name: Quality Checks
on:
  # Allow manual trigger for this action
  workflow_dispatch:

  # Run weekly to check for external factors that impact our code
  schedule:
    - cron: "0 17 * * 1"

  # Run whenever a pull request is opened with master as the target
  pull_request:
    branches:
      - master

jobs:  
  check_gofmt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version:
          - "1.24"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Check gofmt code formatting
        id: gofmt
        run: |
          # Run gofmt
          results=$(gofmt -l .)

          # Exit on non-zero status if there are any files that need formatting
          if [ -n "$results" ]; then
            echo "Some files do not match gofmt code formatting:"
            echo "$results"
            echo "--------------------------"
            echo "Please run 'gofmt -w .' to fix the formatting."
            exit 1
          else
            echo "All files match gofmt code formatting!"
          fi

  check_go_vet:
    runs-on: ubuntu-latest
    needs: [check_gofmt]
    strategy:
      matrix:
        go-version:
          - "1.24"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Run go vet
        run: go vet ./...

  check_go_build:
    runs-on: ubuntu-latest
    needs: [check_go_vet]
    strategy:
      matrix:
        go-version:
          - "1.24"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Build Go apps
        run: go build -o /tmp/pfsense_exporter ./cmd/pfsense_exporter
